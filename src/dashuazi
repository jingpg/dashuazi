#!/bin/sh

# base info
ScriptVer=3
RouteModel=MERCURY_MAC1200R

# server URL
GetPublicIPURL="http://dashuazi.51remai.cn/api/router/getip"
GetCommandURL="http://dashuazi.51remai.cn/api/router/getssid"
GetNewScriptURL="http://dashuazi.51remai.cn/api/router/scriptUpdate"

# pid file
ss_redir_PID_FILE="/var/run/ss-redir.pid"
ss_local_PID_FILE="/var/run/ss-local.pid"

# 
c_wan_mac=""
c_wan_ip=""
c_public_ip=""
c_ssid=""
c_bssid=""
c_wifi_channel_5g=""
c_br_lan=""
routeinfo=""

CFG_Proxy_server_ip=""
CFG_Proxy_server_port=""
CFG_Proxy_server_password=""
CFG_Proxy_server_timeout=""
CFG_Proxy_server_method=""
CFG_BSSID_5G=""
CFG_SSID_5G=""
CFG_WIFI_Channel_5G=""
CFG_version=""

loadCFG(){
	CFG_Proxy_server_ip=`sed '/^Proxy_Server_IP=/!d;s/.*=//' /etc/dashuazi.cfg`
	CFG_Proxy_server_port=`sed '/^Proxy_Server_Port=/!d;s/.*=//' /etc/dashuazi.cfg`
	CFG_Proxy_server_password=`sed '/^Proxy_Server_Password=/!d;s/.*=//' /etc/dashuazi.cfg`
	CFG_Proxy_server_timeout=`sed '/^Proxy_Server_Timeout=/!d;s/.*=//' /etc/dashuazi.cfg`
	CFG_Proxy_server_method=`sed '/^Proxy_Server_Method=/!d;s/.*=//' /etc/dashuazi.cfg`
	CFG_BSSID_5G=`sed '/^BSSID_5G=/!d;s/.*=//' /etc/dashuazi.cfg`
	CFG_SSID_5G=`sed '/^SSID_5G=/!d;s/.*=//' /etc/dashuazi.cfg`
	CFG_WIFI_Channel_5G=`sed '/^WIFI_Channel_5G=/!d;s/.*=//' /etc/dashuazi.cfg`
	CFG_version=`sed '/^CFG_Version=/!d;s/.*=//' /etc/dashuazi.cfg`
}

ProxyIsReadly=false

# 获取当前状态
getInfo(){
	# get eth0 mac
	c_wan_mac=`ifconfig eth1| grep HWaddr | awk -F" " '{print $5}'`

	# get eth0 ip (wan)
	c_wan_ip=`ifconfig eth1 | grep "inet addr"| awk -F: '{print $2}' | awk '{print $1}'`

	c_br_lan=`ifconfig br-lan | grep "inet addr"| awk -F: '{print $2}' | awk '{print $1}'`
	# get wifi info
	c_ssid=`uci get wireless.@wifi-iface[0].ssid`

	c_bssid=`ifconfig wlan0| grep HWaddr | awk -F" " '{print $5}'`	

	c_wifi_channel_5g=`uci get wireless.radio0.channel`	

	#check network is OK
	echo "Starting check network"
	checkNetwork=$(curl -m 3 -o /dev/null -s -w %{http_code} "$GetPublicIPURL")
	if [ $checkNetwork != 200 ]
	then
		echo "Network is down:$checkNetwork"
		return
	fi
	echo "Network is ok"

	echo "Starting check proxy server"
	c_public_ip=$(curl --socks5 "${c_br_lan}:5356" "$GetPublicIPURL" -s -m 3)
	if [ "$c_public_ip" == "$CFG_Proxy_server_ip" ] 
	then
		# proxy is ok
		ProxyIsReadly=true
		echo "Proxy server is ok"
	else
		# proxy error,try startss
		startSS
		startIptable
		# sleep 3
		for loop in 0 1 2 3 4 5 6 7 8 9; 
		do
			c_public_ip=$(curl --socks5 "${c_br_lan}:5356" "$GetPublicIPURL" -s -m 3)
			if [ $c_public_ip == $CFG_Proxy_server_ip ]
				then
				# proxy is ok
				ProxyIsReadly=true
				echo "Proxy server is ok"
				return
			fi
			sleep 1
		done
		echo "Proxy server is down"
		stopIptable
		stopSS
		c_public_ip=$(curl "$GetPublicIPURL" -s -m 3)
	fi
}

# write to config file
writeToConfig(){
	printf "$routeinfo" > /etc/dashuazi.cfg
}

# set wifi
setWifi(){
	# write new bssid
	echo ${CFG_BSSID_5G} > /etc/macaddr_5g
	sleep 1

	#set new ssid
	uci set wireless.@wifi-iface[0].ssid=$CFG_SSID_5G
	sleep 1

	#set new wifi channel
	uci set wireless.radio0.channel=$CFG_WIFI_Channel_5G
	sleep 1

	uci commit

	sleep 1

	/etc/init.d/network restart
}; 

# start ss
startSS(){
	echo "Starting Shadowsocks"
	ulimit -n 4096

	/usr/bin/ss-redir \
		-s $CFG_Proxy_server_ip \
		-p $CFG_Proxy_server_port \
		-l 5355 \
		-m $CFG_Proxy_server_method \
		-k $CFG_Proxy_server_password \
		-t $CFG_Proxy_server_timeout \
		-b $c_br_lan \
		-f $ss_redir_PID_FILE 

	/usr/bin/ss-local \
		-s $CFG_Proxy_server_ip \
		-p $CFG_Proxy_server_port \
		-l 5356 \
		-m $CFG_Proxy_server_method \
		-k $CFG_Proxy_server_password \
		-t $CFG_Proxy_server_timeout \
		-b $c_br_lan \
		-f $ss_local_PID_FILE

	echo "Started PID: `cat $ss_redir_PID_FILE`"
}

stopSS(){
	echo "Stoping shadowsocks client"
	kill `cat $ss_redir_PID_FILE`
	kill `cat $ss_local_PID_FILE`
	rm "$ss_redir_PID_FILE"
	rm "$ss_local_PID_FILE"
}

# start iptables
startIptable(){
	# remoteip="`resolveip -t5 $Server_URL`"
	iptables -t nat -N SHADOWSOCKS
	iptables -t nat -A SHADOWSOCKS -p tcp -d 118.184.176.13 -j REDIRECT --to-ports 5355

	iptables -t nat -A SHADOWSOCKS -d 0.0.0.0/8 -j RETURN
	iptables -t nat -A SHADOWSOCKS -d 10.0.0.0/8 -j RETURN
	iptables -t nat -A SHADOWSOCKS -d 127.0.0.0/8 -j RETURN
	iptables -t nat -A SHADOWSOCKS -d 169.254.0.0/16 -j RETURN
	iptables -t nat -A SHADOWSOCKS -d 172.16.0.0/12 -j RETURN
	iptables -t nat -A SHADOWSOCKS -d 192.168.0.0/16 -j RETURN
	iptables -t nat -A SHADOWSOCKS -d 224.0.0.0/4 -j RETURN
	iptables -t nat -A SHADOWSOCKS -d 240.0.0.0/4 -j RETURN
	iptables -t nat -A SHADOWSOCKS -d $CFG_Proxy_server_ip -j RETURN

	iptables -t nat -A SHADOWSOCKS -p tcp -j REDIRECT --to-ports 5355
	iptables -t nat -A SHADOWSOCKS -p udp -j REDIRECT --to-ports 5355
	iptables -t nat -I zone_lan_prerouting -j SHADOWSOCKS

	# iptables -t nat --list 
}

#stop Iptables
stopIptable(){
	iptables -t nat -D zone_lan_prerouting -j SHADOWSOCKS &> /dev/null
	iptables -t nat -F SHADOWSOCKS &> /dev/null
	sleep 1
	iptables -t nat -X SHADOWSOCKS &> /dev/null
}

setReboot(){
	printf $$ > /tmp/dashuazi_reboot
	reboot
	exit
}

# get command
getCommand(){
	getInfo
	echo "Get route info,and update command"
	echo "================================="
	if $ProxyIsReadly; then
		echo "use proxy"
		routeinfo=$(curl --socks5 "${c_br_lan}:5356" -d "\
Wan_mac=$c_wan_mac\
&Wan_ip=$c_wan_ip\
&Current_public_IP=$c_public_ip\
&SSID_5G=$c_ssid\
&BSSID_5G=$c_bssid\
&WIFI_Channel_5G=$c_wifi_channel_5g\
&Proxy_Server_IP=$CFG_Proxy_server_ip\
&Proxy_Server_Port=$CFG_Proxy_server_port\
&Proxy_Server_Password=$CFG_Proxy_server_password\
&Proxy_Server_Timeout=$CFG_Proxy_server_timeout\
&Proxy_Server_Method=$CFG_Proxy_server_method\
&Script_Ver=$ScriptVer\
&Route_Model=$RouteModel\
&CFG_Version=$CFG_version\
&ProxyIsReadly=$ProxyIsReadly"\
 "$GetCommandURL" -s -m 3)
	else
		echo "has not use proxy"
		routeinfo=$(curl -d "\
Wan_mac=$c_wan_mac\
&Wan_ip=$c_wan_ip\
&Current_public_IP=$c_public_ip\
&SSID_5G=$c_ssid\
&BSSID_5G=$c_bssid\
&WIFI_Channel_5G=$c_wifi_channel_5g\
&Proxy_Server_IP=$CFG_Proxy_server_ip\
&Proxy_Server_Port=$CFG_Proxy_server_port\
&Proxy_Server_Password=$CFG_Proxy_server_password\
&Proxy_Server_Timeout=$CFG_Proxy_server_timeout\
&Proxy_Server_Method=$CFG_Proxy_server_method\
&Script_Ver=$ScriptVer\
&Route_Model=$RouteModel\
&CFG_Version=$CFG_version\
&ProxyIsReadly=$ProxyIsReadly"\
 "$GetCommandURL" -s -m 3)
	fi	
	echo "routeinfo=$routeinfo"
	echo "===================="
	echo "Wan_mac=$c_wan_mac"
	echo "&Wan_ip=$c_wan_ip"
	echo "&Current_public_IP=$c_public_ip"
	echo "&SSID_5G=$c_ssid"
	echo "&BSSID_5G=$c_bssid"
	echo "&WIFI_Channel_5G=$c_wifi_channel_5g"
	echo "&Proxy_Server_IP=$CFG_Proxy_server_ip"
	echo "&Proxy_Server_Port=$CFG_Proxy_server_port"
	echo "&Proxy_Server_Password=$CFG_Proxy_server_password"
	echo "&Proxy_Server_Timeout=$CFG_Proxy_server_timeout"
	echo "&Proxy_Server_Method=$CFG_Proxy_server_method"
	echo "&Script_Ver=$ScriptVer"
	echo "&Route_Model=$RouteModel"
	echo "&CFG_Version=$CFG_version"
	echo "&ProxyIsReadly=$ProxyIsReadly"
	# routeinfo=$(curl --socks5 192.168.12.1:5356 "$GetCommandURL" -s -m 3)
	command=`echo ${routeinfo:8} |awk '{print $1}'`
	case $command in
		nothing )
			echo "Nothing to do"
			;;
		resetRoute )
			echo "Reset route"
			writeToConfig
			loadCFG
			setWifi
			setReboot
			;;
		resetSS )
			echo "Reset Shodwsocks"
			writeToConfig
			loadCFG
			stopSS
			startss
			;;
		resetWifi )
			echo "Reset Wifi"
			writeToConfig
			loadCFG
			setWifi
			setReboot
			;;
		reboot )
			echo "Reboot Route"
			writeToConfig
			setReboot
			;;
		updateScript )
			echo "Update Script"
			curl -o "/bin/dashuazi" -d "Script_Ver=$ScriptVer&Route_Model=$RouteModel" "$GetNewScriptURL" -s 
			chmod +x /bin/dashuazi
			writeToConfig
			setReboot
			;;
	esac
}

getCommand
